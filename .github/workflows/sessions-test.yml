name: Sessions Unit Tests

on:
  pull_request:
    branches: [main]
    paths:
      - "sessions/src/**"
      - "shared/src/**"
      - ".github/workflows/sessions-test.yml"
  push:
    branches: [main]
    paths:
      - "sessions/src/**"
      - "shared/src/**"
      - ".github/workflows/sessions-test.yml"
  workflow_dispatch:

env:
  DOTNET_VERSION: "8.0.x"
  
jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
            
      - name: Restore dependencies
        run: |
          dotnet restore sessions/src/MeatGeek.Sessions.Api/MeatGeek.Sessions.Api.csproj
          dotnet restore sessions/src/MeatGeek.Sessions.Services/MeatGeek.Sessions.Services.csproj
          dotnet restore sessions/src/MeatGeek.Sessions.WorkerApi/MeatGeek.Sessions.WorkerApi.csproj
          dotnet restore sessions/src/MeatGeek.Sessions.Api.Tests/MeatGeek.Sessions.Api.Tests.csproj
          dotnet restore sessions/src/MeatGeek.Sessions.Services.Tests/MeatGeek.Sessions.Services.Tests.csproj
          dotnet restore sessions/src/MeatGeek.Sessions.WorkerApi.Tests/MeatGeek.Sessions.WorkerApi.Tests.csproj
          
      - name: Build projects
        run: |
          dotnet build sessions/src/MeatGeek.Sessions.Api/MeatGeek.Sessions.Api.csproj --configuration Release --no-restore
          dotnet build sessions/src/MeatGeek.Sessions.Services/MeatGeek.Sessions.Services.csproj --configuration Release --no-restore
          dotnet build sessions/src/MeatGeek.Sessions.WorkerApi/MeatGeek.Sessions.WorkerApi.csproj --configuration Release --no-restore
          dotnet build sessions/src/MeatGeek.Sessions.Api.Tests/MeatGeek.Sessions.Api.Tests.csproj --configuration Release --no-restore
          dotnet build sessions/src/MeatGeek.Sessions.Services.Tests/MeatGeek.Sessions.Services.Tests.csproj --configuration Release --no-restore
          dotnet build sessions/src/MeatGeek.Sessions.WorkerApi.Tests/MeatGeek.Sessions.WorkerApi.Tests.csproj --configuration Release --no-restore
          
      - name: Run API Tests
        run: |
          dotnet test sessions/src/MeatGeek.Sessions.Api.Tests/MeatGeek.Sessions.Api.Tests.csproj \
            --configuration Release \
            --no-build \
            --verbosity normal \
            --logger trx \
            --results-directory ./test-results/api
            
      - name: Run Services Tests
        run: |
          dotnet test sessions/src/MeatGeek.Sessions.Services.Tests/MeatGeek.Sessions.Services.Tests.csproj \
            --configuration Release \
            --no-build \
            --verbosity normal \
            --logger trx \
            --results-directory ./test-results/services
            
      - name: Run Worker API Tests
        run: |
          dotnet test sessions/src/MeatGeek.Sessions.WorkerApi.Tests/MeatGeek.Sessions.WorkerApi.Tests.csproj \
            --configuration Release \
            --no-build \
            --verbosity normal \
            --logger trx \
            --results-directory ./test-results/worker
            
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: ./test-results/
          
      - name: Test Summary
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Sessions Unit Test Results
          path: './test-results/**/*.trx'
          reporter: dotnet-trx
          fail-on-error: true