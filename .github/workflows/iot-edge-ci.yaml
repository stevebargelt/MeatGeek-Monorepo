---
name: IoT Edge CI

on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main
    paths:
      - ".github/workflows/iot-edge-ci.yaml"
      - "iot-edge/modules/**"
      - "iot-edge/.env_template"
      - "iot-edge/deployment.template.json"
  workflow_dispatch:

env:
  ACR_IMAGE_PATH_TELEMETRY: ${{ secrets.ACR_LOGIN_SERVER }}/telemetry:1.0.${{ github.run_number }}-amd64
  DOTNET_VERSION: "6.0.x"
  AZURE_RESOURCEGROUP_NAME: "MeatGeek-IoT"
  APP_PACKAGE_PATH: "." # set this to the path to your function app project, defaults to the repository root
  # DOCKER_TARGET_PLATFORM: linux/arm/v7

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Setup DotNet ${{ env.DOTNET_VERSION }} Environment"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ACR
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}

      - name: Build Telemetry docker image
        run: |
          cd ./iot-edge/modules/Telemetry
          docker buildx build --platform linux/arm64 -t ${{env.ACR_IMAGE_PATH_TELEMETRY}} -f Dockerfile.arm64v8 .

      - name: Push Telemetry docker image
        run: |
          docker push ${{env.ACR_IMAGE_PATH_TELEMETRY}}

      # - name: Build the frontend image and push it to ACR
      #     uses: docker/build-push-action@v2
      #     with:
      #       push: true
      #       tags: ${ACR_IMAGE_PATH_TELEMETRY}
      #       file: aspnet-core-dotnet-core/Dockerfile
