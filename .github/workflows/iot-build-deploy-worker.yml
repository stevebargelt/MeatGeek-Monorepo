# Based on: https://github.com/Azure/actions-workflow-samples/blob/master/FunctionApp/linux-dotnet-functionapp-on-azure.yml
#
# and
#
# https://learn.microsoft.com/en-us/dotnet/architecture/devops-for-aspnet-developers/actions-deploy
# and
#
# https://learn.microsoft.com/en-us/azure/azure-functions/functions-how-to-github-actions?tabs=dotnet#deploy-the-function-app
#

name: IoT Worker API Build and Deploy
on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/iot-build-deploy-worker.yml"
      - "iot/src/MeatGeek.IoT.WorkerApi/**"
      - "iot/build/build.yaml"
      - "!.vscode"
  schedule:
    - cron: "20 11 * * *"
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: false
        default: 'prod'
        type: choice
        options:
          - prod
          - staging
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: false
        default: 'prod'
        type: string

env:
  AZURE_FUNCTIONAPP_NAME: ${{ inputs.environment == 'staging' && 'meatgeekiot-workerapi-staging' || 'meatgeekiot-workerapi' }}
  DOTNET_VERSION: "8.0.x"
  AZURE_RESOURCEGROUP_NAME: ${{ inputs.environment == 'staging' && 'MeatGeek-IoT-staging' || 'MeatGeek-IoT' }}
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "." # set this to the path to your function app project, defaults to the repository root

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: "Setup DotNet ${{ env.DOTNET_VERSION }} Environment"
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: "Resolve Project Dependencies Using Dotnet"
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build "./iot/src/MeatGeek.IoT.WorkerApi" --configuration Release --output ./output
          popd

      - name: "Deploy IoT Worker API Functions App"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output"
          publish-profile: ${{ secrets.PUBLISH_PROFILE_IOT_WORKER_FUNCTION_APP }}
