# Based on: https://github.com/Azure/actions-workflow-samples/blob/master/FunctionApp/linux-dotnet-functionapp-on-azure.yml
#
# and
#
# https://learn.microsoft.com/en-us/dotnet/architecture/devops-for-aspnet-developers/actions-deploy
# and
#
# https://learn.microsoft.com/en-us/azure/azure-functions/functions-how-to-github-actions?tabs=dotnet#deploy-the-function-app
#

name: Sessions API Build and Deploy
on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/sessions-build-deploy.yml"
      - "sessions/src/MeatGeek.Sessions.Api/**"
      - "sessions/src/MeatGeek.Sessions.Services/**"
      - "sessions/build/build.yaml"
      - "shared/src/**"
      - "shared/build/build.yaml"
      - "!sessions/docs"
      - "!sessions/mkdocs.yml"
      - "!sessions/build/build-docs.yaml"
      - "!.vscode"
  schedule:
    - cron: "20 11 * * *"
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: "meatgeeksessionsapi"
  DOTNET_VERSION: "8.0.x"
  AZURE_RESOURCEGROUP_NAME: "MeatGeek-Sessions"
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "." # set this to the path to your function app project, defaults to the repository root
  # SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v3

      - name: "Setup DotNet ${{ env.DOTNET_VERSION }} Environment"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: "Resolve Project Dependencies Using Dotnet"
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build "./sessions/src/MeatGeek.Sessions.Api" --configuration Release --output ./output
          popd

      - name: "Run Azure Functions Action"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output"
          publish-profile: ${{ secrets.PUBLISH_PROFILE_SESSIONS_API_FUNCTION_APP }}

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          config: .github/config/slack.yml
          channel: "#development"
        if: always()

      # - name: "Restore Dependencies"
      #   run: dotnet restore "./sessions/src/MeatGeek.Sessions.Api" --verbosity detailed

      # - name: Build
      #   run: dotnet build --no-restore "./sessions/src/MeatGeek.Sessions.Api"
      # # - name: Test
      # #   run: dotnet test --no-build --verbosity normal

      # - name: Publish
      #   run: dotnet publish "./sessions/src/MeatGeek.Sessions.Api/MeatGeek.Sessions.Api.csproj" --configuration Release /property:GenerateFullPaths=true --output functions
      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: functions
      #     path: /home/runner/work/MeatGeek-Monorepo/MeatGeek-Monorepo/functions/**
      #     if-no-files-found: error

  # deploy_staging:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: PRE-PROD
  #     # url: ${{ steps.deployfunctionsapp.outputs. }}

  #   steps:
  #     - name: Download a Build Artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: functions
  #         path: /home/runner/work/MeatGeek-Monorepo/MeatGeek-Monorepo/functions/**
  #     - name: Login via Azure CLI
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #     - name: "Deploy to Azure Functions"
  #       uses: Azure/functions-action@v1
  #       id: deployfunctionsapp
  #       with:
  #         app-name: "${{ env.AZURE_FUNCTIONAPP_NAME }}"
  #         slot-name: ${{ env.name }}
  #         package: /home/runner/work/MeatGeek-Monorepo/MeatGeek-Monorepo/functions
  #         publish-profile: ${{ secrets.PUBLISH_PROFILE_SESSIONS_API_FUNCTION_APP }}
  #     - name: az cli logout
  #       run: az logout
