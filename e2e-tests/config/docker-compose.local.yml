# Local development Docker Compose for E2E testing
# Uses available images and minimal Azure dependencies
version: '3.8'

services:
  # Mock BBQ Device API that simulates real hardware
  mock-device:
    build:
      context: ../../iot-edge/mock-device
      dockerfile: Dockerfile
    ports:
      - "8080:3000"  # Changed port to avoid conflicts
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:3000
      - SIMULATION_SCENARIO=e2e_test
      - TELEMETRY_INTERVAL=2  # Faster for testing
      - GRILL_SETPOINT=225
      - COOK_DURATION=120  # 2 minutes for quick tests
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - e2e-testing
    container_name: mock-device-e2e

  # Telemetry Module for data collection
  telemetry-module:
    build:
      context: ../../iot-edge/modules/Telemetry
      dockerfile: Dockerfile.amd64
    depends_on:
      mock-device:
        condition: service_healthy
    environment:
      # Local testing environment (no real IoT Hub)
      - IOTEDGE_DEVICEID=e2e-test-device
      - IOTEDGE_MODULEID=Telemetry
      - IOTEDGE_WORKLOADURI=http://local-workload:15580
      - IOTEDGE_APIVERSION=2020-07-07
      - IOTEDGE_MODULEGENERATIONID=1
      - IOTEDGE_IOTHUBHOSTNAME=local-test.azure-devices.net
      - IOTEDGE_DEVICECONNECTIONSTRING=HostName=local-test.azure-devices.net;DeviceId=e2e-test-device;SharedAccessKey=fake-key-for-local-testing==
      - IOTEDGE_GATEWAYHOSTNAME=local-edgehub
      - IOTEDGE_AUTHSCHEME=sasToken
      # Telemetry configuration
      - DEVICE_API_URL=http://mock-device:3000/api/robots/MeatGeekBot/commands/get_status
      - TELEMETRY_INTERVAL=2
      - SESSION_ID=e2e-test-session-001
      - RuntimeLogLevel=Debug
      - LOCAL_TESTING=true
    networks:
      - e2e-testing
    container_name: telemetry-module-e2e
    volumes:
      - e2e_logs:/app/logs

  # Local Edge Hub simulation (simple HTTP server instead of nginx with SSL)
  local-edgehub:
    image: node:18-alpine
    ports:
      - "8443:8443"
      - "8883:8883"
    environment:
      - NODE_ENV=development
      - LOCAL_TESTING=true
    networks:
      - e2e-testing
    container_name: local-edgehub-e2e
    working_dir: /app
    volumes:
      - ./local-edgehub:/app
    command: ["node", "server.js"]

  # Local Workload API simulation (simple HTTP server)
  local-workload:
    image: node:18-alpine
    ports:
      - "15580:15580"
    environment:
      - NODE_ENV=development
      - LOCAL_TESTING=true
    networks:
      - e2e-testing
    container_name: local-workload-e2e
    working_dir: /app
    volumes:
      - ./local-workload:/app
    command: ["node", "server.js"]

  # Message collector for validation (lightweight Node.js service)
  message-collector:
    image: node:18-alpine
    environment:
      - COLLECTOR_MODE=e2e
      - EXPECTED_MESSAGE_COUNT=30
      - COLLECTION_TIMEOUT=120
      - LOG_LEVEL=info
    depends_on:
      - telemetry-module
    networks:
      - e2e-testing
    container_name: message-collector-e2e
    working_dir: /app
    volumes:
      - ./message-collector:/app
      - e2e_logs:/app/logs
      - ./test-results:/app/results
    command: ["node", "collector.js"]

  # Test results aggregator
  test-aggregator:
    image: node:18-alpine
    environment:
      - TEST_SUITE=e2e-local
      - TEST_TIMEOUT=300
      - RESULTS_PATH=/test-results
      - MOCK_DEVICE_URL=http://mock-device:3000
    depends_on:
      - mock-device
      - telemetry-module
    networks:
      - e2e-testing
    container_name: test-aggregator-e2e
    working_dir: /app
    volumes:
      - ./test-aggregator:/app
      - e2e_logs:/app/logs:ro
      - ./test-results:/test-results
    command: ["node", "aggregator.js"]

networks:
  e2e-testing:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  e2e_logs:

# Health check configuration
x-healthcheck-config:
  &default-healthcheck
  interval: 10s
  timeout: 5s
  retries: 3
  start_period: 20s